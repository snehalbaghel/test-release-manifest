name: package

on:
  release:
    types: [published]

jobs:
  package:
    runs-on: ubuntu-latest
    env:
      GOOGLE_OAUTH2_CLIENT_ID_PROD: xxx
    steps:
      - name: ⤵️ Checkout code
        uses: actions/checkout@v2

      - name: 🏷 Grab current tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: ♻️ Replace the v prefix in version tag
        uses: mad9000/actions-find-and-replace-string@1
        id: version
        with:
          source: ${{ steps.vars.outputs.tag }}
          find: 'v'
          replace: ''

      - name: ⏬ Download artifact from build workflow (i.e. the fully built extension)
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          branch: main
          name: chrome-extension
          path: ./build-output/

      - name: 📦 Package local flavour of extension ZIP file
        run: zip -r oslash-extension-local.zip ./*
        working-directory: build-output/

      - name: 📎 Attach local flavour of extension ZIP file to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build-output/oslash-extension-local.zip
          tag: ${{ steps.vars.outputs.tag }}
          overwrite: true

      - name: 🧹 Cleanup local flavour of extension
        run: rm -f oslash-extension-local.zip
        working-directory: build-output/

      # The prod-only store flavour has 2 differences from the local flavour.
      # 1. The manifest.json > oauth2.client_id key is different from prod.
      # 2. The manifest.json > key field is removed.
      - name: 📦 Package store flavour of extension ZIP file
        run: |
          npm_config_yes=true npx dot-json manifest.json oauth2.client_id ${{ env.GOOGLE_OAUTH2_CLIENT_ID_PROD }}
          npm_config_yes=true npx dot-json manifest.json key --delete
          zip --recurse-paths oslash-extension-store.zip ./
        working-directory: build-output/

      - name: 📎 Attach store flavour of extension ZIP file to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build-output/oslash-extension-store.zip
          tag: ${{ steps.vars.outputs.tag }}
          overwrite: true

      # Trigger publish workflow.
      # Note that for the `workflow_dispatch` event to work, you need a GitHub PAT
      # with write access to the repo, not the default GitHub token.
      - name: 🏐 Dispatch trigger for publish workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: publish
          ref: ${{ steps.vars.outputs.tag }}
          inputs: '{ "publish": "false" }'
          token: ${{ secrets.TOKEN }}
